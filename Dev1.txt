git push -u origin Dev1
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 10 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 504 bytes | 504.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote: 
remote: Create a pull request for 'Dev1' on GitHub by visiting:
remote:      https://github.com/davidtoby/git_practice/pull/new/Dev1
remote: 
To github.com:davidtoby/git_practice.git
 * [new branch]      Dev1 -> Dev1
branch 'Dev1' set up to track 'origin/Dev1'.



  - git clone: Creates a local copy of a remote.
  - git remote -v: Lists a Git project’s remotes.
  - git fetch: Fetches work from the remote into the local copy.
  - git merge origin/master: Merges origin/master into your local branch.
  - git push origin <branch_name>: Pushes a local branch to the origin remote.


#Pull Request
git add .

git commit -m "add-one-more-reference-URL"
[Dev1 68248af] add-one-more-reference-URL
 1 file changed, 1 insertion(+)

git_practice % git remote
origin

git push origin Dev1
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 10 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 373 bytes | 373.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To github.com:davidtoby/git_practice.git
   2c532de..68248af  Dev1 -> Dev1


Git 分支合并回主分支的过程可以通过以下步骤实现：

假设有一个主分支 master 和一个功能分支 feature，你想要将 feature 分支的更改合并到 master 分支。

确保 master 分支是最新的。在本地克隆仓库中，使用 git checkout master 命令切换到 master 分支。
使用 git pull 命令拉取远程 master 分支的最新更改。
使用 git merge feature 命令将 feature 分支的更改合并到当前的 master 分支。
如果没有冲突，Git 会自动进行合并。如果存在冲突，你需要手动解决冲突，然后将解决冲突后的文件添加到暂存区，并提交更改。
使用 git push 命令将合并后的 master 分支推送到远程仓库。
这样，feature 分支的更改就被成功合并到了 master 分支。


“Pull request”和“Merge request”是两个不同的概念，它们在不同的版本控制系统中有着略微不同的含义。

Pull request:

指的是GitHub等分布式版本控制系统中，开发人员在完成自己的代码修改后，向项目管理者请求合并其代码的一个过程。其基本流程为：开发人员将自己在fork出来的项目中进行的修改提交到自己所属的分支，然后通过向项目管理者提出pull request来请求将自己的修改合并到主分支中。
其中，Pull request通常包含以下信息：源分支、目标分支、修改内容、是否关联了一些Issue等。如果管理者认可这个请求，并对其进行审核，那么就能够将这个分支（或者commit）合并到master分支上。
Merge request:

指的是GitLab等其他分布式版本控制系统中类似于GitHub的Pull request功能。与Pull request相似，Merge request也是开发人员在自己分支上完成功能开发后，向项目管理人员发送的一个请求，请求将自己的分支合并到主分支上。
在GitLab中，Merge request还包括其他一些高级功能，如代码审查、持续集成等。
因此，Pull request和Merge request本质上是相似的，都是用于协同开发的代码合并工具，只不过在不同的版本控制系统中有着细微的差别。
